{"version":3,"sources":["app.js"],"names":["document","addEventListener","iniciarApp","carrito","idusuario","productos","consultarApi","esconder","actuar","mostrarCarrito","hacerResumen","querySelector","value","async","url","resultado","fetch","mostrarProductos","json","error","console","log","forEach","id","nombre","descripcion","precio","stock","imagen_url","cantidad","imagenProducto","createElement","classList","add","src","nombreProducto","textContent","precioProducto","botonProducto","dataset","idProducto","onclick","addCarrito","productoDiv","appendChild","producto","some","agregado","localStorage","setItem","JSON","stringify","carritoGuardado","parse","getItem","limpio","innerHTML","totalcuenta","cuenta","length","cantidadInput","type","min","setAttribute","productId","this","getAttribute","newQuantity","parseInt","find","eliminarProductoButton","filter","cantidadProducto","toggle","guardarCarrito","map","datos","FormData","append","respuesta","method","body","window","location","href","limpiar","removeItem","borrarCarro","clear","alInicio","getElementById"],"mappings":"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","file":"bundle.js","sourcesContent":["document.addEventListener('DOMContentLoaded',function(){\r\n    iniciarApp();\r\n})\r\n\r\nconst carrito={\r\n    idusuario:0,\r\n    productos:[]\r\n}\r\n\r\n\r\nfunction iniciarApp(){\r\n    consultarApi();\r\n    esconder()\r\n    actuar()\r\n    mostrarCarrito()\r\n    idusuario()\r\n    hacerResumen()\r\n}\r\n\r\nfunction idusuario(){\r\n    carrito.idusuario = document.querySelector('#idusuario').value;\r\n    \r\n}\r\n\r\n\r\nasync function consultarApi(){\r\n    try {\r\n        const url= 'http://localhost:3000/api/productos';\r\n        const resultado = await fetch(url);\r\n        const productos = await resultado.json();\r\n        mostrarProductos(productos);\r\n    } catch (error){\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nfunction mostrarProductos(productos){\r\n    productos.forEach(productos => {\r\n        const {id,nombre,descripcion,precio,stock,imagen_url,cantidad} = productos;\r\n        \r\n        const imagenProducto = document.createElement('img');\r\n        imagenProducto.classList.add('imagen-producto')\r\n       imagenProducto.src = `/img/productos/${imagen_url}.png`;\r\n\r\n        const nombreProducto = document.createElement('p');\r\n        nombreProducto.classList.add('nombre-producto');\r\n        nombreProducto.textContent = nombre;\r\n\r\n        const precioProducto = document.createElement('p');\r\n        precioProducto.classList.add('precio-producto');\r\n        precioProducto.textContent = `$ ${precio}`;\r\n\r\n        const botonProducto = document.createElement('button');\r\n        botonProducto.classList.add('boton-producto');\r\n        botonProducto.dataset.idProducto= id;\r\n        botonProducto.textContent = 'Agregar al carrito';\r\n        botonProducto.onclick = function(){\r\n            addCarrito(productos);\r\n        };\r\n\r\n        const productoDiv = document.createElement('div');\r\n        productoDiv.classList.add('producto');\r\n        \r\n        productoDiv.appendChild(imagenProducto);\r\n        productoDiv.appendChild(nombreProducto);\r\n        productoDiv.appendChild(precioProducto);\r\n        productoDiv.appendChild(botonProducto);\r\n\r\n        document.querySelector('#productos').appendChild(productoDiv);\r\n    });\r\n}\r\n\r\nfunction addCarrito(producto){\r\n    const { id } = producto;\r\n    let { productos } = carrito;\r\n    if (productos.some(agregado => agregado.id === id)) {\r\n        // console.log();\r\n        producto.cantidad += 1;\r\n        \r\n    } else {\r\n        carrito.productos = [...productos, producto];\r\n    }\r\n\r\n    localStorage.setItem('carrito',JSON.stringify(carrito))\r\n\r\n    \r\n    // console.log(carrito.productos);\r\n\r\n}\r\n\r\n\r\nfunction mostrarCarrito() {\r\n\r\n    const carritoGuardado = JSON.parse(localStorage.getItem('carrito'));\r\n    const limpio = document.querySelector('#carro');\r\n    if (carritoGuardado === null) {\r\n        limpio.innerHTML = 'no se a seleccionado ningun producto';\r\n    } else {\r\n\r\n        const { productos } = carritoGuardado;\r\n\r\n        let totalcuenta = 0;\r\n        let cuenta = 0;\r\n        // console.log(carritoGuardado.productos);\r\n\r\n        if (carritoGuardado.length === 0) {\r\n\r\n            limpio.innerHTML = 'no se a seleccionado ningun producto';\r\n\r\n        } else {\r\n            limpio.innerHTML = '';\r\n\r\n\r\n            productos.forEach(productos => {\r\n                const { id, nombre, descripcion, precio, stock, imagen_url, cantidad } = productos;\r\n\r\n\r\n                const imagenProducto = document.createElement('img');\r\n                imagenProducto.classList.add('carrito-imagen')\r\n                imagenProducto.src = `/img/productos/${imagen_url}.png`;\r\n\r\n                const nombreProducto = document.createElement('p');\r\n                nombreProducto.classList.add('carrito-nombre');\r\n                nombreProducto.textContent = nombre;\r\n\r\n                cuenta = precio * cantidad;\r\n\r\n                const precioProducto = document.createElement('p');\r\n                precioProducto.classList.add('carrito-precio');\r\n                precioProducto.textContent = cuenta;\r\n\r\n                const cantidadInput = document.createElement('input');\r\n                cantidadInput.classList.add('carrito-cantidad-input');\r\n                cantidadInput.type = 'number';\r\n                cantidadInput.min = 1; // Establece un valor mínimo de 1\r\n                cantidadInput.value = cantidad;\r\n                cantidadInput.setAttribute('data-product-id', id);\r\n\r\n                cantidadInput.addEventListener('change', function() {\r\n                    const productId = this.getAttribute('data-product-id');\r\n                    const newQuantity = parseInt(this.value, 10); // Convierte el valor ingresado a un número entero\r\n                  \r\n                    // Valida que la nueva cantidad sea mayor o igual a 1\r\n                    if (newQuantity >= 1) {\r\n                      // Lógica para actualizar la cantidad del producto en el carrito por su ID.\r\n                      const producto = carritoGuardado.productos.find(producto => producto.id === productId);\r\n                      if (producto) {\r\n                        producto.cantidad = newQuantity;\r\n                        // Actualiza el carrito en el almacenamiento local.\r\n                        localStorage.setItem('carrito', JSON.stringify(carritoGuardado));\r\n                        // Vuelve a mostrar el carrito con la cantidad actualizada.\r\n                        mostrarCarrito();\r\n                      }\r\n                    } else {\r\n                      // Restaura la cantidad a 1 si el valor ingresado es menor que 1 o no válido\r\n                      this.value = 1;\r\n                    }\r\n                  });\r\n\r\n\r\n\r\n                const eliminarProductoButton = document.createElement('button');\r\n                eliminarProductoButton.classList.add('carrito-eliminar');\r\n                eliminarProductoButton.textContent = 'Eliminar';\r\n                eliminarProductoButton.setAttribute('data-product-id', id);\r\n                eliminarProductoButton.addEventListener('click', function() {\r\n                    const productId = this.getAttribute('data-product-id');\r\n                    // Lógica para eliminar el producto del carrito por su ID.\r\n                    // Puedes utilizar `filter` para crear un nuevo arreglo sin el producto que deseas eliminar.\r\n                    carritoGuardado.productos = carritoGuardado.productos.filter(producto => producto.id !== productId);\r\n                    // Actualiza el carrito en el almacenamiento local.\r\n                    localStorage.setItem('carrito', JSON.stringify(carritoGuardado));\r\n                    // Vuelve a mostrar el carrito con el producto eliminado.\r\n                    mostrarCarrito();\r\n                  });\r\n\r\n                const productoDiv = document.createElement('div');\r\n                productoDiv.classList.add('carrito');\r\n\r\n\r\n\r\n                productoDiv.appendChild(imagenProducto);\r\n                productoDiv.appendChild(nombreProducto);\r\n                productoDiv.appendChild(cantidadInput);\r\n                productoDiv.appendChild(precioProducto);\r\n                productoDiv.appendChild(eliminarProductoButton);\r\n\r\n                document.querySelector('#carro').appendChild(productoDiv);\r\n\r\n                // console.log(cuenta);\r\n                totalcuenta = cuenta + totalcuenta;\r\n                // console.log(totalcuenta);\r\n            })\r\n            \r\n            const cantidadProducto = document.createElement('p');\r\n            cantidadProducto.classList.add('carrito-cantidad');\r\n            cantidadProducto.textContent = `el total del carrito es $ ${totalcuenta}`;\r\n\r\n            document.querySelector('#carro').appendChild(cantidadProducto);\r\n\r\n        }\r\n        \r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nfunction esconder(){\r\n    const cart = document.querySelector('#cart')\r\n    cart.classList.toggle('hidden') \r\n}\r\n\r\nfunction actuar(){\r\n    esconder()\r\n    mostrarCarrito()\r\n}\r\n\r\n\r\nasync function guardarCarrito(){\r\n    const carritoGuardado = JSON.parse(localStorage.getItem('carrito'));\r\n    const{ productos } = carritoGuardado;\r\n\r\n    const idProducto = productos.map( producto => producto.id);\r\n    const cantidad = productos.map( producto => producto.cantidad);\r\n    // console.log(idProducto);\r\n\r\n    const datos = new FormData();\r\n    datos.append('usuario_id',carrito.idusuario)\r\n    datos.append('producto_id',idProducto)\r\n    datos.append('cantidad',cantidad)\r\n    \r\n\r\n    const url ='/api/carrito';\r\n\r\n    const respuesta = await fetch(url,{\r\n        method: 'POST',\r\n        body: datos\r\n    });\r\n    \r\n    const resultado = await respuesta.json();\r\n    // console.log(resultado);\r\n    window.location.href = \"/paginas/pedido\";\r\n}\r\n\r\nfunction limpiar(){\r\n    const carritoGuardado = JSON.parse(localStorage.getItem('carrito'));\r\n    carritoGuardado.productos = []; // Vacía el arreglo de productos\r\n    // Actualiza el carrito en el almacenamiento local.\r\n    localStorage.removeItem('carrito'); // Elimina la entrada 'carrito' en el almacenamiento local\r\n    // Vuelve a mostrar el carrito vacío.\r\n    mostrarCarrito();\r\n}\r\n\r\nfunction borrarCarro(){\r\n    localStorage.clear()\r\n    \r\n}\r\nfunction alInicio(){\r\n    window.location.href = \"/\";\r\n    limpiar()\r\n}\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', function () {\r\n    // Selecciona el botón por su ID\r\n    var boton = document.getElementById('detalles');\r\n\r\n    // Agrega un evento de clic al botón\r\n    boton.addEventListener('click', function () {\r\n        // Aquí puedes realizar acciones cuando se haga clic en el botón\r\n        window.location.href = \"/paginas/detalles\"\r\n    });\r\n});\r\n\r\n\r\n"]}